{"version":3,"sources":["logo.svg","components/search.component.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Book","props","react_default","a","createElement","className","style","width","float","src","book","volumeInfo","imageLinks","thumbnail","alt","title","authors","description","href","previewLink","onClick","saveBook","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bookField","bookArray","onChangeBookField","bind","assertThisInitialized","onSubmit","event","setState","target","value","_this2","preventDefault","query","axios","get","then","res","data","items","console","log","_this3","map","currentBook","i","search_component_Book","key","newBook","image","link","post","htmlFor","type","id","placeholder","onChange","bookList","React","Component","App","react_router_dom","logo","height","to","react_router","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7ad8bac4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.495d93cc.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Book = props => (\n    <div className=\"card\" style={{ width: 200, float: \"left\" }}>\n        <img src={props.book.volumeInfo.imageLinks.thumbnail} className=\"card-img-top\" alt=\"...\"></img>\n        <div className=\"card-body\">\n            <h5 className=\"card-title\">{props.book.volumeInfo.title}</h5>\n            <h6 className=\"card-subtitle mb-2 text-muted\">{props.book.volumeInfo.authors}</h6>\n            <p className=\"card-text\">{props.book.volumeInfo.description}</p>\n            <a href={props.book.volumeInfo.previewLink} className=\"btn btn-primary\">Check out this book!</a>\n            <a href=\"\" className=\"btn btn-primary\" onClick={props.saveBook(props.book)}>Save to favorites!</a>\n        </div>\n    </div>\n);\n\n// const Todo = props => (\n//     <tr>\n//         <td className={props.todo.todo_completed ? 'completed' : \"\"}>{props.todo.todo_description}</td>\n//         <td className={props.todo.todo_completed ? 'completed' : \"\"}>{props.todo.todo_responsible}</td>\n//         <td className={props.todo.todo_completed ? 'completed' : \"\"}>{props.todo.todo_priority}</td>\n//         <td>\n//             <Link to={\"/edit/\" + props.todo._id}>Edit</Link>\n//         </td>\n//     </tr>\n// )\n\nexport default class Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookField: \"\",\n            bookArray: []\n        };\n\n        this.onChangeBookField = this.onChangeBookField.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChangeBookField(event) {\n        this.setState({ bookField: event.target.value });\n    }\n    // componentDidMount() {\n    //     axios.get(\"http://localhost:4000/todos\")\n    //         .then(res => {\n    //             this.setState({ todos: res.data })\n    //         })\n    //         .catch(error => console.log(error))\n    // }\n\n\n    // todoList() {\n    //     return this.state.todos.map(function (currentTodo, i) {\n    //         return <Todo todo={currentTodo} key={i}></Todo>\n    //     })\n    // }\n\n    onSubmit(event) {\n        event.preventDefault();\n        const query = this.state.bookField;\n        axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query + \"&key=AIzaSyA3AuIEy2wwPKeVeBNl291JKzxHFW6aDOM\")\n            .then(res => { this.setState({ bookArray: res.data.items }); console.log(res.data.items); });\n    }\n\n    bookList() {\n        return this.state.bookArray.map((currentBook, i) => {\n            return <Book book={currentBook} key={i} saveBook={this.saveBook}></Book>\n        })\n    }\n\n    saveBook(book) {\n        const newBook = {\n            title: book.volumeInfo.title,\n            authors: book.volumeInfo.authors,\n            description: book.volumeInfo.description,\n            image: book.volumeInfo.imageLinks.thumbnail,\n            link: book.volumeInfo.previewLink\n        }\n        axios.post(\"http://localhost:3001/saveBook/\", newBook)\n            .then(res => console.log(res.data));\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"jumbotron\">\n                    <h1 className=\"display-4\">Find Your Next Favorite Novel!</h1>\n                    <p className=\"lead\">Type a term into the field below to begin.</p>\n                    <hr className=\"my-4\"></hr>\n                </div>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"bookField\">Enter book name:</label>\n                        <input type=\"text\" className=\"form-control\" id=\"bookField\" placeholder=\"Harry Potter and the Goblet of Fire\" value={this.state.bookField} onChange={this.onChangeBookField}></input>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Search</button>\n                </form>\n                <br></br>\n                {this.bookList()}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Saved from \"./components/saved.component\";\nimport Search from \"./components/search.component\";\n\nimport logo from \"./logo.svg\"\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a className=\"navbar-brand\" href=\"http://www.siddharthbatra.com\" target=\"_blank\">\n              <img src={logo} width=\"30\" height=\"30\"></img>\n            </a>\n            <Link to=\"/\" className=\"navbar-brand\">Google Books Search+Save!</Link>\n            <div className=\"collapse navbar-collapse\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"navbar-item\">\n                  <Link to=\"/\" className=\"nav-link\">Search</Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/saved\" className=\"nav-link\">Saved</Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          <Route path=\"/\" exact component={Search}></Route>\n          {/* <Route path=\"/saved\" component={Saved}></Route> */}\n        </div>\n      </Router>\n    );\n  }\n\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}